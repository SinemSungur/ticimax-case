{"ast":null,"code":"import { BaseSpinner, BaseButton, SortControl, Pagination, DataTable, NoData } from '@/components';\nimport { ERROR_MESSAGES, BUTTON_LABELS, TABLE_COLUMNS_CONFIG } from '@/constants/content';\nexport default {\n  name: 'ProductGrid',\n  components: {\n    BaseSpinner,\n    BaseButton,\n    SortControl,\n    Pagination,\n    DataTable,\n    NoData\n  },\n  data() {\n    return {\n      ERROR_MESSAGES,\n      BUTTON_LABELS,\n      TABLE_COLUMNS_CONFIG\n    };\n  },\n  props: {\n    products: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    },\n    currentSort: {\n      type: String,\n      required: true\n    }\n  }\n};","map":{"version":3,"names":["BaseSpinner","BaseButton","SortControl","Pagination","DataTable","NoData","ERROR_MESSAGES","BUTTON_LABELS","TABLE_COLUMNS_CONFIG","name","components","data","props","products","type","Array","default","loading","Boolean","error","currentPage","Number","required","totalPages","currentSort","String"],"sources":["src/components/organisms/ProductGrid.vue"],"sourcesContent":["<template>\n    <div class=\"product-grid\">\n        <div v-if=\"loading\" class=\"product-grid__loading\">\n            <BaseSpinner />\n        </div>\n\n        <div v-else-if=\"error\" class=\"product-grid__error\">\n            <NoData \n                :title=\"ERROR_MESSAGES.GENERAL_ERROR\"\n                :message=\"ERROR_MESSAGES.FETCH_PRODUCTS_ERROR\"\n                :show-retry-button=\"true\"\n                @retry=\"$emit('retry')\"\n            />\n        </div>\n\n        <div v-else-if=\"!products || products.length === 0\" class=\"product-grid__no-data\">\n            <NoData />\n        </div>\n\n        <div v-else class=\"product-grid__content\">\n            <div class=\"product-grid__sort\">\n                <SortControl \n                    :current-sort=\"currentSort\"\n                    @sort-change=\"$emit('sort-change', $event)\"\n                />\n            </div>\n            \n            <div class=\"product-grid__table\">\n                <DataTable \n                    :data=\"products\"\n                    :tableColumnData=\"TABLE_COLUMNS_CONFIG\"\n                />\n            </div>\n            \n            <div class=\"product-grid__pagination\">\n                <Pagination \n                    :current-page=\"currentPage\"\n                    :total-pages=\"totalPages\"\n                    @page-change=\"$emit('page-change', $event)\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { BaseSpinner, BaseButton, SortControl, Pagination, DataTable, NoData } from '@/components'\nimport { \n    ERROR_MESSAGES, \n    BUTTON_LABELS, \n    TABLE_COLUMNS_CONFIG \n} from '@/constants/content'\n\nexport default {\n    name: 'ProductGrid',\n    components: {\n        BaseSpinner,\n        BaseButton,\n        SortControl,\n        Pagination,\n        DataTable,\n        NoData\n    },\n    data() {\n        return {\n            ERROR_MESSAGES,\n            BUTTON_LABELS,\n            TABLE_COLUMNS_CONFIG\n        }\n    },\n    props: {\n        products: {\n            type: Array,\n            default: () => []\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        error: {\n            type: Boolean,\n            default: false\n        },\n        currentPage: {\n            type: Number,\n            required: true\n        },\n        totalPages: {\n            type: Number,\n            required: true\n        },\n        currentSort: {\n            type: String,\n            required: true\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.product-grid {\n    width: 100%;\n\n    &__loading,\n    &__error,\n    &__no-data {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-height: 400px;\n    }\n\n    &__content {\n        width: 100%;\n    }\n\n    &__sort {\n        margin-bottom: 20px;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        padding: 10px 0;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        background-color: #f9f9f9;\n        padding: 15px;\n    }\n\n    &__table {\n        width: 100%;\n    }\n\n    &__pagination {\n        display: flex;\n        justify-content: center;\n        margin-top: 20px;\n    }\n}\n\n.error-message,\n.empty-message {\n    text-align: center;\n\n    h3 {\n        margin: 0 0 12px 0;\n        color: #2c3e50;\n    }\n\n    p {\n        margin: 0 0 16px 0;\n        color: #6c757d;\n    }\n}\n\n.error-message h3 {\n    color: #dc3545;\n}\n</style>"],"mappings":"AA8CA,SAAAA,WAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,MAAA;AACA,SACAC,cAAA,EACAC,aAAA,EACAC,oBAAA,QACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAV,WAAA;IACAC,UAAA;IACAC,WAAA;IACAC,UAAA;IACAC,SAAA;IACAC;EACA;EACAM,KAAA;IACA;MACAL,cAAA;MACAC,aAAA;MACAC;IACA;EACA;EACAI,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,OAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAG,KAAA;MACAL,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAI,WAAA;MACAN,IAAA,EAAAO,MAAA;MACAC,QAAA;IACA;IACAC,UAAA;MACAT,IAAA,EAAAO,MAAA;MACAC,QAAA;IACA;IACAE,WAAA;MACAV,IAAA,EAAAW,MAAA;MACAH,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}