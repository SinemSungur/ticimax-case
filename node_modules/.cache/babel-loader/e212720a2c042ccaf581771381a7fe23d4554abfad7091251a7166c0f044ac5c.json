{"ast":null,"code":"import { ImageCell, PriceCell, DescriptionCell, DiscountCell, AvailabilityCell, RatingCell, SizeCell, WeightCell, BarcodeCell, CategoryCell, DefaultCell } from './cells';\nexport default {\n  name: 'TableCell',\n  components: {\n    ImageCell,\n    PriceCell,\n    DescriptionCell,\n    DiscountCell,\n    AvailabilityCell,\n    RatingCell,\n    SizeCell,\n    WeightCell,\n    BarcodeCell,\n    CategoryCell,\n    DefaultCell\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'default'\n    },\n    value: {\n      type: [String, Number, Object],\n      default: ''\n    },\n    alt: {\n      type: String,\n      default: ''\n    },\n    comment: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    cellComponent() {\n      const components = {\n        image: 'ImageCell',\n        price: 'PriceCell',\n        description: 'DescriptionCell',\n        discount: 'DiscountCell',\n        availability: 'AvailabilityCell',\n        rating: 'RatingCell',\n        size: 'SizeCell',\n        weight: 'WeightCell',\n        barcode: 'BarcodeCell',\n        category: 'CategoryCell'\n      };\n      return components[this.type] || 'DefaultCell';\n    },\n    cellProps() {\n      const baseProps = {\n        value: this.value\n      };\n      if (this.type === 'image') {\n        return {\n          ...baseProps,\n          alt: this.alt\n        };\n      }\n      if (this.type === 'rating') {\n        return {\n          ...baseProps,\n          comment: this.comment\n        };\n      }\n      return baseProps;\n    }\n  }\n};","map":{"version":3,"names":["ImageCell","PriceCell","DescriptionCell","DiscountCell","AvailabilityCell","RatingCell","SizeCell","WeightCell","BarcodeCell","CategoryCell","DefaultCell","name","components","props","type","String","default","value","Number","Object","alt","comment","computed","cellComponent","image","price","description","discount","availability","rating","size","weight","barcode","category","cellProps","baseProps"],"sources":["src/components/atoms/TableCell.vue"],"sourcesContent":["<template>\n  <div class=\"table-cell\">\n    <component :is=\"cellComponent\" v-bind=\"cellProps\" />\n  </div>\n</template>\n\n<script>\nimport {\n  ImageCell,\n  PriceCell,\n  DescriptionCell,\n  DiscountCell,\n  AvailabilityCell,\n  RatingCell,\n  SizeCell,\n  WeightCell,\n  BarcodeCell,\n  CategoryCell,\n  DefaultCell\n} from './cells'\n\nexport default {\n  name: 'TableCell',\n  components: {\n    ImageCell,\n    PriceCell,\n    DescriptionCell,\n    DiscountCell,\n    AvailabilityCell,\n    RatingCell,\n    SizeCell,\n    WeightCell,\n    BarcodeCell,\n    CategoryCell,\n    DefaultCell\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'default'\n    },\n    value: {\n      type: [String, Number, Object],\n      default: ''\n    },\n    alt: {\n      type: String,\n      default: ''\n    },\n    comment: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    cellComponent() {\n      const components = {\n        image: 'ImageCell',\n        price: 'PriceCell',\n        description: 'DescriptionCell',\n        discount: 'DiscountCell',\n        availability: 'AvailabilityCell',\n        rating: 'RatingCell',\n        size: 'SizeCell',\n        weight: 'WeightCell',\n        barcode: 'BarcodeCell',\n        category: 'CategoryCell'\n      }\n      return components[this.type] || 'DefaultCell'\n    },\n    cellProps() {\n      const baseProps = { value: this.value }\n\n      if (this.type === 'image') {\n        return { ...baseProps, alt: this.alt }\n      }\n\n      if (this.type === 'rating') {\n        return { ...baseProps, comment: this.comment }\n      }\n\n      return baseProps\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-cell {\n  // Base styles for table cell container\n}\n</style>\n"],"mappings":"AAOA,SACAA,SAAA,EACAC,SAAA,EACAC,eAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,WAAA,EACAC,YAAA,EACAC,WAAA,QACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAZ,SAAA;IACAC,SAAA;IACAC,eAAA;IACAC,YAAA;IACAC,gBAAA;IACAC,UAAA;IACAC,QAAA;IACAC,UAAA;IACAC,WAAA;IACAC,YAAA;IACAC;EACA;EACAG,KAAA;IACAC,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,GAAAC,MAAA,EAAAG,MAAA,EAAAC,MAAA;MACAH,OAAA;IACA;IACAI,GAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAK,OAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAM,QAAA;IACAC,cAAA;MACA,MAAAX,UAAA;QACAY,KAAA;QACAC,KAAA;QACAC,WAAA;QACAC,QAAA;QACAC,YAAA;QACAC,MAAA;QACAC,IAAA;QACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACA,OAAArB,UAAA,MAAAE,IAAA;IACA;IACAoB,UAAA;MACA,MAAAC,SAAA;QAAAlB,KAAA,OAAAA;MAAA;MAEA,SAAAH,IAAA;QACA;UAAA,GAAAqB,SAAA;UAAAf,GAAA,OAAAA;QAAA;MACA;MAEA,SAAAN,IAAA;QACA;UAAA,GAAAqB,SAAA;UAAAd,OAAA,OAAAA;QAAA;MACA;MAEA,OAAAc,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}