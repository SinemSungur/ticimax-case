{"ast":null,"code":"import axios from 'axios';\nimport { API_CONFIG, ERROR_MESSAGES, SORT_DIRECTIONS, DEFAULT_VALUES } from '@/constants/content';\nconst state = {\n  products: [],\n  loading: false,\n  error: null,\n  totalPages: 0,\n  totalItems: 0,\n  currentPage: DEFAULT_VALUES.DEFAULT_PAGE,\n  itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n};\nconst getters = {\n  sortedProducts: state => {\n    return [...state.products];\n  },\n  totalItems: state => state.totalItems\n};\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  },\n  SET_TOTAL_PAGES(state, totalPages) {\n    state.totalPages = totalPages;\n  },\n  SET_TOTAL_ITEMS(state, totalItems) {\n    state.totalItems = totalItems;\n  },\n  SET_CURRENT_PAGE(state, page) {\n    state.currentPage = page;\n  },\n  SET_SORT(state, sort) {\n    state.sort = sort;\n  }\n};\nconst actions = {\n  async fetchProducts({\n    commit,\n    state\n  }, {\n    page = 1,\n    sort = ''\n  } = {}) {\n    commit('SET_LOADING', true);\n    commit('SET_ERROR', null);\n    try {\n      const limit = state.itemsPerPage;\n      const skip = (page - 1) * limit;\n      let url = `${API_CONFIG.BASE_URL}?limit=${limit}&skip=${skip}`;\n      if (sort) {\n        url += `&sortBy=price&order=${sort}`;\n      }\n      const response = await axios.get(url);\n      const {\n        products,\n        total\n      } = response.data;\n      commit('SET_PRODUCTS', products);\n      commit('SET_TOTAL_ITEMS', total);\n      commit('SET_CURRENT_PAGE', page);\n      commit('SET_SORT', sort);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","API_CONFIG","ERROR_MESSAGES","SORT_DIRECTIONS","DEFAULT_VALUES","state","products","loading","error","totalPages","totalItems","currentPage","DEFAULT_PAGE","itemsPerPage","ITEMS_PER_PAGE","getters","sortedProducts","mutations","SET_PRODUCTS","SET_LOADING","SET_ERROR","SET_TOTAL_PAGES","SET_TOTAL_ITEMS","SET_CURRENT_PAGE","page","SET_SORT","sort","actions","fetchProducts","commit","limit","skip","url","BASE_URL","response","get","total","data","message","namespaced"],"sources":["/Users/sinem.sungur/Downloads/ticimax-case/src/store/modules/products.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  API_CONFIG,\n  ERROR_MESSAGES,\n  SORT_DIRECTIONS,\n  DEFAULT_VALUES\n} from '@/constants/content'\n\nconst state = {\n  products: [],\n  loading: false,\n  error: null,\n  totalPages: 0,\n  totalItems: 0,\n  currentPage: DEFAULT_VALUES.DEFAULT_PAGE,\n  itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n}\n\nconst getters = {\n  sortedProducts: (state) => {\n    return [...state.products]\n  },\n  totalItems: (state) => state.totalItems\n}\n\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_ERROR(state, error) {\n    state.error = error\n  },\n  SET_TOTAL_PAGES(state, totalPages) {\n    state.totalPages = totalPages\n  },\n  SET_TOTAL_ITEMS(state, totalItems) {\n    state.totalItems = totalItems\n  },\n  SET_CURRENT_PAGE(state, page) {\n    state.currentPage = page\n  },\n  SET_SORT(state, sort) {\n    state.sort = sort\n  }\n}\n\nconst actions = {\n  async fetchProducts({ commit, state }, { page = 1, sort = '' } = {}) {\n    commit('SET_LOADING', true)\n    commit('SET_ERROR', null)\n\n    try {\n      const limit = state.itemsPerPage\n      const skip = (page - 1) * limit\n\n      let url = `${API_CONFIG.BASE_URL}?limit=${limit}&skip=${skip}`\n\n      if (sort) {\n        url += `&sortBy=price&order=${sort}`\n      }\n\n      const response = await axios.get(url)\n      const { products, total } = response.data\n\n      commit('SET_PRODUCTS', products)\n      commit('SET_TOTAL_ITEMS', total)\n      commit('SET_CURRENT_PAGE', page)\n      commit('SET_SORT', sort)\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}