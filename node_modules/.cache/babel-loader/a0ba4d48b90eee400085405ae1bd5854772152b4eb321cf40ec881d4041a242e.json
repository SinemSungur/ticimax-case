{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ProductListTemplate } from '@/components';\nimport { mapState, mapActions } from 'vuex';\nimport { DEFAULT_VALUES } from '@/constants/content';\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductListTemplate\n  },\n  data() {\n    return {\n      currentPage: 1,\n      currentSort: '',\n      itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n    };\n  },\n  computed: {\n    ...mapState('products', ['products', 'loading', 'error', 'totalItems']),\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    }\n  },\n  watch: {\n    $route(to) {\n      this.syncStateFromQuery(to.query);\n    }\n  },\n  mounted() {\n    this.syncStateFromQuery(this.$route.query);\n    this.fetchProducts({\n      page: this.currentPage,\n      sort: this.currentSort\n    });\n  },\n  methods: {\n    ...mapActions('products', ['fetchProducts']),\n    syncStateFromQuery(query) {\n      const page = parseInt(query.page) || 1;\n      const sort = query.sort || '';\n      this.currentPage = page;\n      this.currentSort = sort;\n    },\n    updateQuery() {\n      const query = {};\n      if (this.currentPage > 1) {\n        query.page = this.currentPage;\n      }\n      if (this.currentSort) {\n        query.sort = this.currentSort;\n      }\n      this.$router.push({\n        path: this.$route.path,\n        query\n      }).catch(() => {});\n    },\n    handleSortChange(sortDirection) {\n      this.currentSort = sortDirection;\n      this.updateQuery();\n      this.fetchProducts({\n        page: this.currentPage,\n        sort: this.currentSort\n      });\n    },\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.updateQuery();\n      this.fetchProducts({\n        page: this.currentPage,\n        sort: this.currentSort\n      });\n    }\n  }\n};","map":{"version":3,"names":["ProductListTemplate","mapState","mapActions","DEFAULT_VALUES","name","components","data","currentPage","currentSort","itemsPerPage","ITEMS_PER_PAGE","computed","totalPages","Math","ceil","totalItems","watch","$route","to","syncStateFromQuery","query","mounted","fetchProducts","page","sort","methods","parseInt","updateQuery","$router","push","path","catch","handleSortChange","sortDirection","handlePageChange"],"sources":["src/pages/ProductList.vue"],"sourcesContent":["<template>\n  <div class=\"product-list-page\">\n    <ProductListTemplate\n      :products=\"products\"\n      :loading=\"loading\"\n      :error=\"error\"\n      :current-sort=\"currentSort\"\n      :current-page=\"currentPage\"\n      :total-pages=\"totalPages\"\n      @sort-change=\"handleSortChange\"\n      @page-change=\"handlePageChange\"\n      @retry=\"fetchProducts\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ProductListTemplate } from '@/components'\nimport { mapState, mapActions } from 'vuex'\nimport { DEFAULT_VALUES } from '@/constants/content'\n\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductListTemplate\n  },\n  data() {\n    return {\n      currentPage: 1,\n      currentSort: '',\n      itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n    }\n  },\n  computed: {\n    ...mapState('products', ['products', 'loading', 'error', 'totalItems']),\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage)\n    }\n  },\n  watch: {\n    $route(to) {\n      this.syncStateFromQuery(to.query)\n    }\n  },\n  mounted() {\n    this.syncStateFromQuery(this.$route.query)\n    this.fetchProducts({ page: this.currentPage, sort: this.currentSort })\n  },\n  methods: {\n    ...mapActions('products', ['fetchProducts']),\n    syncStateFromQuery(query) {\n      const page = parseInt(query.page) || 1\n      const sort = query.sort || ''\n      \n      this.currentPage = page\n      this.currentSort = sort\n    },\n    updateQuery() {\n      const query = {}\n      if (this.currentPage > 1) {\n        query.page = this.currentPage\n      }\n      if (this.currentSort) {\n        query.sort = this.currentSort\n      }\n      \n      this.$router.push({\n        path: this.$route.path,\n        query\n      }).catch(() => {})\n    },\n    handleSortChange(sortDirection) {\n      this.currentSort = sortDirection\n      this.updateQuery()\n      this.fetchProducts({\n        page: this.currentPage,\n        sort: this.currentSort\n      })\n    },\n    handlePageChange(page) {\n      this.currentPage = page\n      this.updateQuery()\n      this.fetchProducts({\n        page: this.currentPage,\n        sort: this.currentSort\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.product-list-page {\n    min-height: 100vh;\n    background-color: #f8f9fa;\n}\n</style>\n"],"mappings":";AAiBA,SAAAA,mBAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AACA,SAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL;EACA;EACAM,KAAA;IACA;MACAC,WAAA;MACAC,WAAA;MACAC,YAAA,EAAAN,cAAA,CAAAO;IACA;EACA;EACAC,QAAA;IACA,GAAAV,QAAA;IACAW,WAAA;MACA,OAAAC,IAAA,CAAAC,IAAA,MAAAC,UAAA,QAAAN,YAAA;IACA;EACA;EACAO,KAAA;IACAC,OAAAC,EAAA;MACA,KAAAC,kBAAA,CAAAD,EAAA,CAAAE,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,kBAAA,MAAAF,MAAA,CAAAG,KAAA;IACA,KAAAE,aAAA;MAAAC,IAAA,OAAAhB,WAAA;MAAAiB,IAAA,OAAAhB;IAAA;EACA;EACAiB,OAAA;IACA,GAAAvB,UAAA;IACAiB,mBAAAC,KAAA;MACA,MAAAG,IAAA,GAAAG,QAAA,CAAAN,KAAA,CAAAG,IAAA;MACA,MAAAC,IAAA,GAAAJ,KAAA,CAAAI,IAAA;MAEA,KAAAjB,WAAA,GAAAgB,IAAA;MACA,KAAAf,WAAA,GAAAgB,IAAA;IACA;IACAG,YAAA;MACA,MAAAP,KAAA;MACA,SAAAb,WAAA;QACAa,KAAA,CAAAG,IAAA,QAAAhB,WAAA;MACA;MACA,SAAAC,WAAA;QACAY,KAAA,CAAAI,IAAA,QAAAhB,WAAA;MACA;MAEA,KAAAoB,OAAA,CAAAC,IAAA;QACAC,IAAA,OAAAb,MAAA,CAAAa,IAAA;QACAV;MACA,GAAAW,KAAA;IACA;IACAC,iBAAAC,aAAA;MACA,KAAAzB,WAAA,GAAAyB,aAAA;MACA,KAAAN,WAAA;MACA,KAAAL,aAAA;QACAC,IAAA,OAAAhB,WAAA;QACAiB,IAAA,OAAAhB;MACA;IACA;IACA0B,iBAAAX,IAAA;MACA,KAAAhB,WAAA,GAAAgB,IAAA;MACA,KAAAI,WAAA;MACA,KAAAL,aAAA;QACAC,IAAA,OAAAhB,WAAA;QACAiB,IAAA,OAAAhB;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}