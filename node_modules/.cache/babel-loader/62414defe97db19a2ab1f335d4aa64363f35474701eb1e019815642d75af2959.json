{"ast":null,"code":"import BaseTable from '@/components/atoms/BaseTable.vue';\nimport BaseSpinner from '@/components/atoms/BaseSpinner.vue';\nimport BaseButton from '@/components/atoms/BaseButton.vue';\nimport SortControl from '@/components/molecules/SortControl.vue';\nimport Pagination from '@/components/molecules/Pagination.vue';\nexport default {\n  name: 'ProductGrid',\n  components: {\n    BaseTable,\n    BaseSpinner,\n    BaseButton,\n    SortControl,\n    Pagination\n  },\n  props: {\n    products: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: String,\n      default: null\n    },\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    },\n    currentSort: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      imagesLoading: true,\n      tableColumns: [{\n        name: 'ID',\n        width: 60,\n        key: 'id'\n      }, {\n        name: 'Image',\n        width: 120,\n        key: 'thumbnail',\n        scopedSlots: {\n          customRender: 'imageAction'\n        }\n      }, {\n        name: 'Product Name',\n        width: 200,\n        key: 'title'\n      }, {\n        name: 'Price',\n        width: 100,\n        key: 'price'\n      }, {\n        name: 'Category',\n        width: 150,\n        key: 'category'\n      }, {\n        name: 'Brand',\n        width: 120,\n        key: 'brand'\n      }, {\n        name: 'Stock',\n        width: 80,\n        key: 'stock'\n      }, {\n        name: 'Discount',\n        width: 100,\n        key: 'discountPercentage'\n      }, {\n        name: 'Rating',\n        width: 80,\n        key: 'rating'\n      }]\n    };\n  },\n  watch: {\n    products: {\n      handler() {\n        this.imagesLoading = true;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handleAllImagesLoaded() {\n      this.imagesLoading = false;\n    },\n    handleEditProduct(product) {\n      // TODO: Implement edit functionality\n      console.log('Edit product:', product);\n      this.$emit('edit-product', product);\n    }\n  }\n};","map":{"version":3,"names":["BaseTable","BaseSpinner","BaseButton","SortControl","Pagination","name","components","props","products","type","Array","default","loading","Boolean","error","String","currentPage","Number","required","totalPages","currentSort","data","imagesLoading","tableColumns","width","key","scopedSlots","customRender","watch","handler","immediate","methods","handleAllImagesLoaded","handleEditProduct","product","console","log","$emit"],"sources":["src/components/organisms/ProductGrid.vue"],"sourcesContent":["<template>\n    <div class=\"product-grid\">\n        <div v-if=\"loading || imagesLoading\" class=\"product-grid__loading\">\n            <BaseSpinner />\n        </div>\n\n        <div v-else-if=\"error\" class=\"product-grid__error\">\n            <div class=\"error-message\">\n                <h3>Error!</h3>\n                <p>{{ error }}</p>\n                <BaseButton @click=\"$emit('retry')\">Try Again</BaseButton>\n            </div>\n        </div>\n\n        <div v-else-if=\"products.length === 0\" class=\"product-grid__empty\">\n            <div class=\"empty-message\">\n                <h3>No Products Found</h3>\n                <p>No products available on this page.</p>\n            </div>\n        </div>\n\n        <div v-else class=\"product-grid__content\">\n            <div class=\"product-grid__sort\">\n                <SortControl \n                    :current-sort=\"currentSort\"\n                    @sort-change=\"$emit('sort-change', $event)\"\n                />\n            </div>\n            \n            <div class=\"product-grid__table\">\n                <BaseTable \n                    :data=\"products\"\n                    :table-column-data=\"tableColumns\"\n                    @all-images-loaded=\"handleAllImagesLoaded\"\n                />\n            </div>\n            \n            <div class=\"product-grid__pagination\">\n                <Pagination \n                    :current-page=\"currentPage\"\n                    :total-pages=\"totalPages\"\n                    @page-change=\"$emit('page-change', $event)\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport BaseTable from '@/components/atoms/BaseTable.vue'\nimport BaseSpinner from '@/components/atoms/BaseSpinner.vue'\nimport BaseButton from '@/components/atoms/BaseButton.vue'\nimport SortControl from '@/components/molecules/SortControl.vue'\nimport Pagination from '@/components/molecules/Pagination.vue'\n\nexport default {\n    name: 'ProductGrid',\n    components: {\n        BaseTable,\n        BaseSpinner,\n        BaseButton,\n        SortControl,\n        Pagination\n    },\n    props: {\n        products: {\n            type: Array,\n            default: () => []\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        error: {\n            type: String,\n            default: null\n        },\n        currentPage: {\n            type: Number,\n            required: true\n        },\n        totalPages: {\n            type: Number,\n            required: true\n        },\n        currentSort: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            imagesLoading: true,\n            tableColumns: [\n                {\n                    name: 'ID',\n                    width: 60,\n                    key: 'id'\n                },\n                {\n                    name: 'Image',\n                    width: 120,\n                    key: 'thumbnail',\n                    scopedSlots: {\n                        customRender: 'imageAction'\n                    }\n                },\n                {\n                    name: 'Product Name',\n                    width: 200,\n                    key: 'title'\n                },\n                {\n                    name: 'Price',\n                    width: 100,\n                    key: 'price'\n                },\n                {\n                    name: 'Category',\n                    width: 150,\n                    key: 'category'\n                },\n                {\n                    name: 'Brand',\n                    width: 120,\n                    key: 'brand'\n                },\n                {\n                    name: 'Stock',\n                    width: 80,\n                    key: 'stock'\n                },\n                {\n                    name: 'Discount',\n                    width: 100,\n                    key: 'discountPercentage'\n                },\n                {\n                    name: 'Rating',\n                    width: 80,\n                    key: 'rating'\n                }\n            ]\n        }\n    },\n    watch: {\n        products: {\n            handler() {\n                this.imagesLoading = true\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        handleAllImagesLoaded() {\n            this.imagesLoading = false\n        },\n        handleEditProduct(product) {\n            // TODO: Implement edit functionality\n            console.log('Edit product:', product)\n            this.$emit('edit-product', product)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.product-grid {\n    &__loading,\n    &__error,\n    &__empty {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-height: 300px;\n    }\n\n    &__content {\n        width: 100%;\n    }\n\n    &__sort {\n        margin-bottom: 20px;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        padding: 10px 0;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        background-color: #f9f9f9;\n        padding-left: 15px;\n    }\n\n    &__table {\n        width: 100%;\n        margin-bottom: 20px;\n    }\n\n    &__pagination {\n        display: flex;\n        justify-content: center;\n        margin-top: 20px;\n    }\n}\n\n.error-message,\n.empty-message {\n    text-align: center;\n\n    h3 {\n        margin: 0 0 12px 0;\n        color: #2c3e50;\n    }\n\n    p {\n        margin: 0 0 16px 0;\n        color: #6c757d;\n    }\n}\n\n.error-message h3 {\n    color: #dc3545;\n}\n</style>"],"mappings":"AAiDA,OAAAA,SAAA;AACA,OAAAC,WAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AACA,OAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,SAAA;IACAC,WAAA;IACAC,UAAA;IACAC,WAAA;IACAC;EACA;EACAG,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,OAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAG,KAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;IACA;IACAK,WAAA;MACAP,IAAA,EAAAQ,MAAA;MACAC,QAAA;IACA;IACAC,UAAA;MACAV,IAAA,EAAAQ,MAAA;MACAC,QAAA;IACA;IACAE,WAAA;MACAX,IAAA,EAAAM,MAAA;MACAG,QAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,aAAA;MACAC,YAAA,GACA;QACAlB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;QACAC,WAAA;UACAC,YAAA;QACA;MACA,GACA;QACAtB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA,GACA;QACApB,IAAA;QACAmB,KAAA;QACAC,GAAA;MACA;IAEA;EACA;EACAG,KAAA;IACApB,QAAA;MACAqB,QAAA;QACA,KAAAP,aAAA;MACA;MACAQ,SAAA;IACA;EACA;EACAC,OAAA;IACAC,sBAAA;MACA,KAAAV,aAAA;IACA;IACAW,kBAAAC,OAAA;MACA;MACAC,OAAA,CAAAC,GAAA,kBAAAF,OAAA;MACA,KAAAG,KAAA,iBAAAH,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}