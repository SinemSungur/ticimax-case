{"ast":null,"code":"import axios from 'axios';\nimport { API_CONFIG, ERROR_MESSAGES, SORT_DIRECTIONS, DEFAULT_VALUES } from '@/constants/content';\nconst state = {\n  products: [],\n  loading: false,\n  error: null,\n  totalPages: 0,\n  totalItems: 0,\n  currentPage: DEFAULT_VALUES.DEFAULT_PAGE,\n  itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n};\nconst getters = {\n  sortedProducts: state => {\n    return [...state.products].sort((a, b) => {\n      return a.price - b.price;\n    });\n  },\n  totalItems: state => state.totalItems\n};\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  },\n  SET_TOTAL_PAGES(state, totalPages) {\n    state.totalPages = totalPages;\n  },\n  SET_TOTAL_ITEMS(state, totalItems) {\n    state.totalItems = totalItems;\n  },\n  SET_CURRENT_PAGE(state, page) {\n    state.currentPage = page;\n  }\n};\nconst actions = {\n  async fetchProducts({\n    commit,\n    state\n  }, {\n    page = DEFAULT_VALUES.DEFAULT_PAGE,\n    sort = SORT_DIRECTIONS.ASC\n  } = {}) {\n    commit('SET_LOADING', true);\n    commit('SET_ERROR', null);\n    try {\n      // TEMPORARY: Return empty array for testing NoData component\n      const products = [];\n      const totalProducts = 0;\n      const totalPages = 0;\n      commit('SET_PRODUCTS', products);\n      commit('SET_TOTAL_PAGES', totalPages);\n      commit('SET_TOTAL_ITEMS', totalProducts);\n      commit('SET_CURRENT_PAGE', page);\n    } catch (error) {\n      commit('SET_ERROR', ERROR_MESSAGES.FETCH_PRODUCTS_ERROR);\n      commit('SET_PRODUCTS', []);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","API_CONFIG","ERROR_MESSAGES","SORT_DIRECTIONS","DEFAULT_VALUES","state","products","loading","error","totalPages","totalItems","currentPage","DEFAULT_PAGE","itemsPerPage","ITEMS_PER_PAGE","getters","sortedProducts","sort","a","b","price","mutations","SET_PRODUCTS","SET_LOADING","SET_ERROR","SET_TOTAL_PAGES","SET_TOTAL_ITEMS","SET_CURRENT_PAGE","page","actions","fetchProducts","commit","ASC","totalProducts","FETCH_PRODUCTS_ERROR","namespaced"],"sources":["/Users/sinem.sungur/Downloads/ticimax-case/src/store/modules/products.js"],"sourcesContent":["import axios from 'axios'\nimport { \n  API_CONFIG, \n  ERROR_MESSAGES, \n  SORT_DIRECTIONS, \n  DEFAULT_VALUES \n} from '@/constants/content'\n\nconst state = {\n  products: [],\n  loading: false,\n  error: null,\n  totalPages: 0,\n  totalItems: 0,\n  currentPage: DEFAULT_VALUES.DEFAULT_PAGE,\n  itemsPerPage: DEFAULT_VALUES.ITEMS_PER_PAGE\n}\n\nconst getters = {\n  sortedProducts: (state) => {\n    return [...state.products].sort((a, b) => {\n      return a.price - b.price\n    })\n  },\n  totalItems: (state) => state.totalItems\n}\n\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_ERROR(state, error) {\n    state.error = error\n  },\n  SET_TOTAL_PAGES(state, totalPages) {\n    state.totalPages = totalPages\n  },\n  SET_TOTAL_ITEMS(state, totalItems) {\n    state.totalItems = totalItems\n  },\n  SET_CURRENT_PAGE(state, page) {\n    state.currentPage = page\n  }\n}\n\nconst actions = {\n  async fetchProducts({ commit, state }, { page = DEFAULT_VALUES.DEFAULT_PAGE, sort = SORT_DIRECTIONS.ASC } = {}) {\n    commit('SET_LOADING', true)\n    commit('SET_ERROR', null)\n    \n    try {\n      // TEMPORARY: Return empty array for testing NoData component\n      const products = []\n      const totalProducts = 0\n      const totalPages = 0\n      \n      commit('SET_PRODUCTS', products)\n      commit('SET_TOTAL_PAGES', totalPages)\n      commit('SET_TOTAL_ITEMS', totalProducts)\n      commit('SET_CURRENT_PAGE', page)\n      \n    } catch (error) {\n      commit('SET_ERROR', ERROR_MESSAGES.FETCH_PRODUCTS_ERROR)\n      commit('SET_PRODUCTS', [])\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,UAAU,EACVC,cAAc,EACdC,eAAe,EACfC,cAAc,QACT,qBAAqB;AAE5B,MAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEP,cAAc,CAACQ,YAAY;EACxCC,YAAY,EAAET,cAAc,CAACU;AAC/B,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,cAAc,EAAGX,KAAK,IAAK;IACzB,OAAO,CAAC,GAAGA,KAAK,CAACC,QAAQ,CAAC,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACxC,OAAOD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;IAC1B,CAAC,CAAC;EACJ,CAAC;EACDV,UAAU,EAAGL,KAAK,IAAKA,KAAK,CAACK;AAC/B,CAAC;AAED,MAAMW,SAAS,GAAG;EAChBC,YAAYA,CAACjB,KAAK,EAAEC,QAAQ,EAAE;IAC5BD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;EAC3B,CAAC;EACDiB,WAAWA,CAAClB,KAAK,EAAEE,OAAO,EAAE;IAC1BF,KAAK,CAACE,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDiB,SAASA,CAACnB,KAAK,EAAEG,KAAK,EAAE;IACtBH,KAAK,CAACG,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDiB,eAAeA,CAACpB,KAAK,EAAEI,UAAU,EAAE;IACjCJ,KAAK,CAACI,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDiB,eAAeA,CAACrB,KAAK,EAAEK,UAAU,EAAE;IACjCL,KAAK,CAACK,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDiB,gBAAgBA,CAACtB,KAAK,EAAEuB,IAAI,EAAE;IAC5BvB,KAAK,CAACM,WAAW,GAAGiB,IAAI;EAC1B;AACF,CAAC;AAED,MAAMC,OAAO,GAAG;EACd,MAAMC,aAAaA,CAAC;IAAEC,MAAM;IAAE1B;EAAM,CAAC,EAAE;IAAEuB,IAAI,GAAGxB,cAAc,CAACQ,YAAY;IAAEK,IAAI,GAAGd,eAAe,CAAC6B;EAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9GD,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3BA,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;IAEzB,IAAI;MACF;MACA,MAAMzB,QAAQ,GAAG,EAAE;MACnB,MAAM2B,aAAa,GAAG,CAAC;MACvB,MAAMxB,UAAU,GAAG,CAAC;MAEpBsB,MAAM,CAAC,cAAc,EAAEzB,QAAQ,CAAC;MAChCyB,MAAM,CAAC,iBAAiB,EAAEtB,UAAU,CAAC;MACrCsB,MAAM,CAAC,iBAAiB,EAAEE,aAAa,CAAC;MACxCF,MAAM,CAAC,kBAAkB,EAAEH,IAAI,CAAC;IAElC,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACduB,MAAM,CAAC,WAAW,EAAE7B,cAAc,CAACgC,oBAAoB,CAAC;MACxDH,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC;IAC5B,CAAC,SAAS;MACRA,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAC9B;EACF;AACF,CAAC;AAED,eAAe;EACbI,UAAU,EAAE,IAAI;EAChB9B,KAAK;EACLU,OAAO;EACPM,SAAS;EACTQ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}